{"version":3,"file":"index.min.js","mappings":"mBAAO,SAASA,IACd,OAAOC,MAAM,8BACVC,MAAKC,GAAOA,EAAIC,SAChBF,MAAKG,GAAQA,EAAKC,UACvB,CCJO,SAASC,EAAeC,EAAOC,EAAMC,EAAIC,GAC9CH,EAAMI,MAAMH,EAAMC,GAAIG,SAAQC,IAC5B,MAAMC,EAAQC,OAAOF,EAAQC,OAEvBE,EAAoBF,EAASA,EADlBC,OAAOF,EAAQI,UACuB,IAEvDP,EAAKQ,mBACH,YACA,4DAC+BL,EAAQM,wDACFN,EAAQO,2GAEZP,EAAQQ,sHAI/BR,EAAQI,SAAW,6BAA+B,wBAEhDJ,EAAQC,MAAMQ,QAAQ,8BAEtBT,EAAQI,SACJ,sDACHD,EAAkBM,QAAQ,8BAEvB,uMASjB,GAEL,CChCO,SAASC,EAAqBf,EAAMC,EAAIC,GAC7CX,IAAcE,MAAKI,IACjBC,EAAeD,EAAUG,EAAMC,EAAIC,EAAK,GAE5C,CCPsB,IAAIc,OAAO,UAAW,CAC1CC,MAAM,EACNC,cAAe,EAEfC,WAAY,CACVC,GAAI,qBACJC,WAAW,KCNR,WAuBL,MAAMC,EAAiBC,SAASC,iBAAiB,aAU3CC,EAAW,IAAIC,sBARrB,SAAwBC,GACtBA,EAAQvB,SAAQwB,IACVA,EAAMC,iBACI,oBAAqB,cA1BpBN,SAASC,iBA0BV,qBAtBPpB,SAAQ0B,IACf,IAAIC,EAAc,EAClB,MAAMC,EAAWC,SAASH,EAAQI,aAoBC,gBAnB7BC,EAAWC,KAAKC,MALP,KAKwBL,GAEjCM,EAAiBC,aAAY,KACjCR,GAAe,EACfD,EAAQU,YAAcT,EAElBA,GAAeC,GACjBS,cAAcH,EAChB,GACCH,EAAS,IAWZ,GAEJ,IAIAb,EAAelB,SAAQsC,IACrBjB,EAASkB,QAAQD,EAAI,GAEzB,CChCAE,GAGA,MAAMC,EAAetB,SAASuB,cAAc,4BACtCC,EAAcxB,SAASuB,cAAc,kBACrCE,EAAazB,SAASuB,cAAc,0BAE1CC,EAAYE,iBAAiB,SAM7B,WACE1D,IAAcE,MAAKI,IACjBC,EACED,EACAqD,EACAA,EAAcC,EACdN,GAGFK,GAAeC,EAEXD,GAAerD,EAASuD,SAC1BL,EAAYM,MAAMC,QAAU,OAC9B,GAEJ,IAnBA,IAAIJ,EAAc,EAClB,MAAMC,EAAc,EAoBpBpC,EAAqB,EAAG,EAAG8B,GAC3B9B,EAAqB,GAAI,GAAIiC,E","sources":["webpack://sl-organick-shop/./src/js/services/getProducts.js","webpack://sl-organick-shop/./src/js/modules/insertProducts.js","webpack://sl-organick-shop/./src/js/modules/handleInsertProducts.js","webpack://sl-organick-shop/./src/js/modules/swiper-testimonial.js","webpack://sl-organick-shop/./src/js/modules/counter.js","webpack://sl-organick-shop/./src/js/index.js"],"sourcesContent":["export function getProducts() {\r\n  return fetch('./../data/global.twig.json')\r\n    .then(res => res.json())\r\n    .then(data => data.products);\r\n}\r\n","export function insertProducts(array, from, to, list) {\r\n  array.slice(from, to).forEach(product => {\r\n    const price = Number(product.price);\r\n    const discount = Number(product.discount);\r\n    const priceWithDiscount = price - (price * discount) / 100;\r\n\r\n    list.insertAdjacentHTML(\r\n      'beforeend',\r\n      `<li class=\"product\">\r\n        <span class=\"product__tag\">${product.tag}</span>\r\n        <img class=\"product__image\" src=\"${product.image}\" alt=\"vegetable\" />\r\n        <div class=\"product__details\">\r\n          <h5 class=\"product__title\">${product.title}</h5>\r\n          <div class=\"product__footer\">\r\n            <span>\r\n              <span class=\"product__price ${\r\n                product.discount ? 'product__price--discounted' : ''\r\n              }\"\r\n              >$${product.price.toFixed(2)}</span>\r\n                ${\r\n                  product.discount\r\n                    ? `<span class=\"product__discount\">\r\n                $${priceWithDiscount.toFixed(2)}\r\n                </span>`\r\n                    : ''\r\n                }\r\n            </span>\r\n            <svg width=\"84\" height=\"18\">\r\n              <use href=\"./images/icons.svg#icon-stars\"></use>\r\n            </svg>\r\n          </div>\r\n        </div>\r\n      </li>`\r\n    );\r\n  });\r\n}\r\n","import { getProducts } from '../services/getProducts';\r\nimport { insertProducts } from './insertProducts';\r\n\r\nexport function handleInsertProducts(from, to, list) {\r\n  getProducts().then(products => {\r\n    insertProducts(products, from, to, list);\r\n  });\r\n}\r\n","export const swiper = new Swiper('.swiper', {\r\n  loop: true,\r\n  slidesPerView: 1,\r\n\r\n  pagination: {\r\n    el: '.swiper-pagination',\r\n    clickable: true,\r\n  },\r\n});\r\n","export function counterOnScroll() {\n  function counterFunc(counterSelector, attributeSelector) {\n    const counters = document.querySelectorAll(counterSelector);\n\n    const interval = 1500;\n\n    counters.forEach(counter => {\n      let startsValue = 0;\n      const endValue = parseInt(counter.getAttribute(attributeSelector));\n      const duration = Math.floor(interval / endValue);\n\n      const counterHandler = setInterval(() => {\n        startsValue += 1;\n        counter.textContent = startsValue;\n\n        if (startsValue == endValue) {\n          clearInterval(counterHandler);\n        }\n      }, duration);\n    });\n  }\n\n  // play animation on scroll\n  const counterSection = document.querySelectorAll('.counters');\n\n  function counterTrigger(entries) {\n    entries.forEach(entry => {\n      if (entry.isIntersecting) {\n        counterFunc('.counters__number', 'data-number');\n      }\n    });\n  }\n\n  const observer = new IntersectionObserver(counterTrigger);\n\n  counterSection.forEach(box => {\n    observer.observe(box);\n  });\n}\n","import { counterOnScroll } from './modules/counter';\r\nimport { handleInsertProducts } from './modules/handleInsertProducts';\r\nimport { insertProducts } from './modules/insertProducts';\r\nimport { swiper } from './modules/swiper-testimonial';\r\nimport { getProducts } from './services/getProducts';\r\n\r\ncounterOnScroll();\r\nswiper;\r\n\r\nconst productsList = document.querySelector('.products-home__products');\r\nconst loadMoreBtn = document.querySelector('.load-more-btn');\r\nconst offersList = document.querySelector('.offers-home__products');\r\n\r\nloadMoreBtn.addEventListener('click', loadMoreProducts);\r\n\r\nlet itemsToShow = 8;\r\nconst loadMoreQty = 8;\r\n\r\n// on load more\r\nfunction loadMoreProducts() {\r\n  getProducts().then(products => {\r\n    insertProducts(\r\n      products,\r\n      itemsToShow,\r\n      itemsToShow + loadMoreQty,\r\n      productsList\r\n    );\r\n\r\n    itemsToShow += loadMoreQty;\r\n\r\n    if (itemsToShow >= products.length) {\r\n      loadMoreBtn.style.display = 'none';\r\n    }\r\n  });\r\n}\r\n\r\nhandleInsertProducts(0, 8, productsList);\r\nhandleInsertProducts(12, 16, offersList);\r\n"],"names":["getProducts","fetch","then","res","json","data","products","insertProducts","array","from","to","list","slice","forEach","product","price","Number","priceWithDiscount","discount","insertAdjacentHTML","tag","image","title","toFixed","handleInsertProducts","Swiper","loop","slidesPerView","pagination","el","clickable","counterSection","document","querySelectorAll","observer","IntersectionObserver","entries","entry","isIntersecting","counter","startsValue","endValue","parseInt","getAttribute","duration","Math","floor","counterHandler","setInterval","textContent","clearInterval","box","observe","counterOnScroll","productsList","querySelector","loadMoreBtn","offersList","addEventListener","itemsToShow","loadMoreQty","length","style","display"],"sourceRoot":""}